package views

import "deltawashere/portfolio/viewmodels"

var typingHanlder = templ.NewOnceHandle()

templ Home(profile viewmodels.Profile) {
	@Layout() {
		@typingHanlder.Once() {
			@templ.JSONScript("summary", profile.Summary)
			<script>
				let counter = 0

				function typeAndDelete(text, summary){

					text.innerHTML = summary[counter];
					text.classList.add("typing")
					counter++;

					text.addEventListener("animationend", (event)=> {
						if(event.animationName==="typing" && summary.length <= counter){
							text.classList.add("idleTyping")
							text.classList.remove("typing")
							resetAnimation(text);
						}
						
						if(event.animationName==="deleting"){
							text.innerHTML = summary[counter];
							counter++;
							resetAnimation(text)
						}
					});

					text.addEventListener("animationstart", (event)=>{
						console.log(event);
					});

					function resetAnimation(text){
						text.style.animation = 'none';
						text.offsetHeight; /* trigger reflow */
						text.style.animation = null; 
					}
				}

			</script>
		}
		<div class="flex h-screen w-screen flex-col items-center justify-center overflow-y-visible">
			<script>
				(()=>{
					document.addEventListener("DOMContentLoaded", ()=>{
						const text = document.getElementById("summaryText")
						const textContainer = document.getElementById("typingContainer")
						const summary = JSON.parse(document.getElementById('summary').textContent);
						typeAndDelete(text, summary);
					});
				})()
			</script>
			<div class="flex h-screen w-10/12 shrink-0 flex-col items-center justify-center gap-5 text-center">
				<div class="flex overflow-hidden rounded-full align-middle">
					<img class="" src={ profile.Picture }/>
				</div>
				<div class="inline-block" id="typingContainer">
					<h2 class="" id="summaryText"></h2>
				</div>
			</div>
			<button class="absolute bottom-[-100px]" hx-swap="innerHtml" hx-target="#wrapper" hx-trigger="revealed" hx-get="/career">b</button>
		</div>
	}
}
